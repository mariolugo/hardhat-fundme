{
  "address": "0x0aE14e79c4A2d7A5652aa3B7b2102ad5e0E6a966",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheapWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfa1def743a9f4e250fe7a39e6864bb86d50c94973d5f1b563b6f813a4279abb0",
  "receipt": {
    "to": null,
    "from": "0xd6C7bE821CBF10aF04c297B35E67552081c6bCe9",
    "contractAddress": "0x0aE14e79c4A2d7A5652aa3B7b2102ad5e0E6a966",
    "transactionIndex": 15,
    "gasUsed": "1029438",
    "logsBloom": "0x
    "blockHash": "0x097e94ef45b70a902741984d23f9bdb1607c4f1f8bc4e0d436aeb66d735b2f15",
    "transactionHash": "0xfa1def743a9f4e250fe7a39e6864bb86d50c94973d5f1b563b6f813a4279abb0",
    "logs": [],
    "blockNumber": 4508178,
    "cumulativeGasUsed": "16957990",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "296df79645803cf3c7d325e02a351306",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheapWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mario Lugo\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"params\":{\"fundingAddress\":\"the address of the funder\"},\"returns\":{\"_0\":\"the amount funded\"}}},\"title\":\"A contract for crowfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"notice\":\"Gets the amount that an address has funded\"}},\"notice\":\"This contract is for learning purposes only\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowfunding\\n * @author Mario Lugo\\n * @notice This contract is for learning purposes only\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MIN_USD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheapWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    /** @notice Gets the amount that an address has funded\\n     *  @param fundingAddress the address of the funder\\n     *  @return the amount funded\\n     */\\n    function getAddressToAmountFunded(\\n        address fundingAddress\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x6bd99f0e5f18ed5cae9d9eed14b0c03e89206b2b3772b086f8ef960380aa8340\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        );\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x3647fbeb17fc595929d83adeb025f805a726da4a16e15966b354dcf843f17796\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012c0380380620012c083398181016040528101906200003791906200011d565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161114062000180600039600081816102b1015281816104a70152818161058201526107c401526111406000f3fe6080604052600436106100865760003560e01c80633ccfd60b116100595780633ccfd60b14610128578063893d20e8146101325780639e87a5cd1461015d578063b60d428814610188578063d7b4750c1461019257610086565b80630343fb251461008b5780630d8e6e2c146100c8578063206ddccd146100f3578063213dbea2146100fd575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b59565b6101cf565b6040516100bf9190610b9f565b60405180910390f35b3480156100d457600080fd5b506100dd610217565b6040516100ea9190610b9f565b60405180910390f35b6100fb6102af565b005b34801561010957600080fd5b50610112610573565b60405161011f9190610b9f565b60405180910390f35b610130610580565b005b34801561013e57600080fd5b506101476107c0565b6040516101549190610bc9565b60405180910390f35b34801561016957600080fd5b506101726107e8565b60405161017f9190610c43565b60405180910390f35b610190610812565b005b34801561019e57600080fd5b506101b960048036038101906101b49190610c8a565b61093a565b6040516101c69190610bc9565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa9190610ccc565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610334576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156103b857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161036e575b5050505050905060005b81518110156104425760008282815181106103e0576103df610cf9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043a90610d57565b9150506103c2565b50600067ffffffffffffffff81111561045e5761045d610d9f565b5b60405190808252806020026020018201604052801561048c5781602001602082028036833780820191505090505b50600190805190602001906104a2929190610a4f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104e990610dff565b60006040518083038185875af1925050503d8060008114610526576040519150601f19603f3d011682016040523d82523d6000602084013e61052b565b606091505b505090508061056f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056690610e71565b60405180910390fd5b5050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610605576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156106b05760006001828154811061062b5761062a610cf9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106a890610d57565b915050610608565b50600067ffffffffffffffff8111156106cc576106cb610d9f565b5b6040519080825280602002602001820160405280156106fa5781602001602082028036833780820191505090505b5060019080519060200190610710929190610a4f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161073790610dff565b60006040518083038185875af1925050503d8060008114610774576040519150601f19603f3d011682016040523d82523d6000602084013e610779565b606091505b50509050806107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b490610e71565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610851600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461098290919063ffffffff16565b1015610892576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088990610edd565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600182815481106109505761094f610cf9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061098e836109be565b90506000670de0b6b3a764000085836109a79190610efd565b6109b19190610f6e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190611017565b5050509150506402540be40081610a479190611092565b915050919050565b828054828255906000526020600020908101928215610ac8579160200282015b82811115610ac75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a6f565b5b509050610ad59190610ad9565b5090565b5b80821115610af2576000816000905550600101610ada565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2682610afb565b9050919050565b610b3681610b1b565b8114610b4157600080fd5b50565b600081359050610b5381610b2d565b92915050565b600060208284031215610b6f57610b6e610af6565b5b6000610b7d84828501610b44565b91505092915050565b6000819050919050565b610b9981610b86565b82525050565b6000602082019050610bb46000830184610b90565b92915050565b610bc381610b1b565b82525050565b6000602082019050610bde6000830184610bba565b92915050565b6000819050919050565b6000610c09610c04610bff84610afb565b610be4565b610afb565b9050919050565b6000610c1b82610bee565b9050919050565b6000610c2d82610c10565b9050919050565b610c3d81610c22565b82525050565b6000602082019050610c586000830184610c34565b92915050565b610c6781610b86565b8114610c7257600080fd5b50565b600081359050610c8481610c5e565b92915050565b600060208284031215610ca057610c9f610af6565b5b6000610cae84828501610c75565b91505092915050565b600081519050610cc681610c5e565b92915050565b600060208284031215610ce257610ce1610af6565b5b6000610cf084828501610cb7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6282610b86565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d9457610d93610d28565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de9600083610dce565b9150610df482610dd9565b600082019050919050565b6000610e0a82610ddc565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e5b600b83610e14565b9150610e6682610e25565b602082019050919050565b60006020820190508181036000830152610e8a81610e4e565b9050919050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610ec7601383610e14565b9150610ed282610e91565b602082019050919050565b60006020820190508181036000830152610ef681610eba565b9050919050565b6000610f0882610b86565b9150610f1383610b86565b9250828202610f2181610b86565b91508282048414831517610f3857610f37610d28565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7982610b86565b9150610f8483610b86565b925082610f9457610f93610f3f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fbe81610f9f565b8114610fc957600080fd5b50565b600081519050610fdb81610fb5565b92915050565b6000819050919050565b610ff481610fe1565b8114610fff57600080fd5b50565b60008151905061101181610feb565b92915050565b600080600080600060a0868803121561103357611032610af6565b5b600061104188828901610fcc565b955050602061105288828901611002565b945050604061106388828901610cb7565b935050606061107488828901610cb7565b925050608061108588828901610fcc565b9150509295509295909350565b600061109d82610fe1565b91506110a883610fe1565b92508282026110b681610fe1565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156110ee576110ed610d28565b5b828205841483151761110357611102610d28565b5b509291505056fea2646970667358221220802271858754e483984b1423afadf813fc20484a8ec7ea8472810a17fedc520564736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80633ccfd60b116100595780633ccfd60b14610128578063893d20e8146101325780639e87a5cd1461015d578063b60d428814610188578063d7b4750c1461019257610086565b80630343fb251461008b5780630d8e6e2c146100c8578063206ddccd146100f3578063213dbea2146100fd575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b59565b6101cf565b6040516100bf9190610b9f565b60405180910390f35b3480156100d457600080fd5b506100dd610217565b6040516100ea9190610b9f565b60405180910390f35b6100fb6102af565b005b34801561010957600080fd5b50610112610573565b60405161011f9190610b9f565b60405180910390f35b610130610580565b005b34801561013e57600080fd5b506101476107c0565b6040516101549190610bc9565b60405180910390f35b34801561016957600080fd5b506101726107e8565b60405161017f9190610c43565b60405180910390f35b610190610812565b005b34801561019e57600080fd5b506101b960048036038101906101b49190610c8a565b61093a565b6040516101c69190610bc9565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa9190610ccc565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610334576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156103b857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161036e575b5050505050905060005b81518110156104425760008282815181106103e0576103df610cf9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043a90610d57565b9150506103c2565b50600067ffffffffffffffff81111561045e5761045d610d9f565b5b60405190808252806020026020018201604052801561048c5781602001602082028036833780820191505090505b50600190805190602001906104a2929190610a4f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104e990610dff565b60006040518083038185875af1925050503d8060008114610526576040519150601f19603f3d011682016040523d82523d6000602084013e61052b565b606091505b505090508061056f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056690610e71565b60405180910390fd5b5050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610605576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156106b05760006001828154811061062b5761062a610cf9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106a890610d57565b915050610608565b50600067ffffffffffffffff8111156106cc576106cb610d9f565b5b6040519080825280602002602001820160405280156106fa5781602001602082028036833780820191505090505b5060019080519060200190610710929190610a4f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161073790610dff565b60006040518083038185875af1925050503d8060008114610774576040519150601f19603f3d011682016040523d82523d6000602084013e610779565b606091505b50509050806107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b490610e71565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610851600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461098290919063ffffffff16565b1015610892576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088990610edd565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600182815481106109505761094f610cf9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061098e836109be565b90506000670de0b6b3a764000085836109a79190610efd565b6109b19190610f6e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190611017565b5050509150506402540be40081610a479190611092565b915050919050565b828054828255906000526020600020908101928215610ac8579160200282015b82811115610ac75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a6f565b5b509050610ad59190610ad9565b5090565b5b80821115610af2576000816000905550600101610ada565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2682610afb565b9050919050565b610b3681610b1b565b8114610b4157600080fd5b50565b600081359050610b5381610b2d565b92915050565b600060208284031215610b6f57610b6e610af6565b5b6000610b7d84828501610b44565b91505092915050565b6000819050919050565b610b9981610b86565b82525050565b6000602082019050610bb46000830184610b90565b92915050565b610bc381610b1b565b82525050565b6000602082019050610bde6000830184610bba565b92915050565b6000819050919050565b6000610c09610c04610bff84610afb565b610be4565b610afb565b9050919050565b6000610c1b82610bee565b9050919050565b6000610c2d82610c10565b9050919050565b610c3d81610c22565b82525050565b6000602082019050610c586000830184610c34565b92915050565b610c6781610b86565b8114610c7257600080fd5b50565b600081359050610c8481610c5e565b92915050565b600060208284031215610ca057610c9f610af6565b5b6000610cae84828501610c75565b91505092915050565b600081519050610cc681610c5e565b92915050565b600060208284031215610ce257610ce1610af6565b5b6000610cf084828501610cb7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6282610b86565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d9457610d93610d28565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de9600083610dce565b9150610df482610dd9565b600082019050919050565b6000610e0a82610ddc565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e5b600b83610e14565b9150610e6682610e25565b602082019050919050565b60006020820190508181036000830152610e8a81610e4e565b9050919050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610ec7601383610e14565b9150610ed282610e91565b602082019050919050565b60006020820190508181036000830152610ef681610eba565b9050919050565b6000610f0882610b86565b9150610f1383610b86565b9250828202610f2181610b86565b91508282048414831517610f3857610f37610d28565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7982610b86565b9150610f8483610b86565b925082610f9457610f93610f3f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fbe81610f9f565b8114610fc957600080fd5b50565b600081519050610fdb81610fb5565b92915050565b6000819050919050565b610ff481610fe1565b8114610fff57600080fd5b50565b60008151905061101181610feb565b92915050565b600080600080600060a0868803121561103357611032610af6565b5b600061104188828901610fcc565b955050602061105288828901611002565b945050604061106388828901610cb7565b935050606061107488828901610cb7565b925050608061108588828901610fcc565b9150509295509295909350565b600061109d82610fe1565b91506110a883610fe1565b92508282026110b681610fe1565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156110ee576110ed610d28565b5b828205841483151761110357611102610d28565b5b509291505056fea2646970667358221220802271858754e483984b1423afadf813fc20484a8ec7ea8472810a17fedc520564736f6c63430008130033",
  "devdoc": {
    "author": "Mario Lugo",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "params": {
          "fundingAddress": "the address of the funder"
        },
        "returns": {
          "_0": "the amount funded"
        }
      }
    },
    "title": "A contract for crowfunding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "notice": "Gets the amount that an address has funded"
      }
    },
    "notice": "This contract is for learning purposes only",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}